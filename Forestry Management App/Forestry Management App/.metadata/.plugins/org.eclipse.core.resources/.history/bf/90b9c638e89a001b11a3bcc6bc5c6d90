package com.cg.fms.controller;

import java.time.LocalDate;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cg.fms.dto.Contract;
import com.cg.fms.service.ContractService;

@RestController
@RequestMapping("contractDetails")
public class ContractController {
	
	@Autowired
	ContractService contractservice;
	
	@GetMapping("{getContractDetils}")
	public ResponseEntity<?> getContract(@PathVariable("getContractDetils") String contractNumber){
		
		Contract c = contractservice.getContract(contractNumber);
		if(c != null) {
			return new ResponseEntity<Contract>(c, HttpStatus.FOUND);	
		}
		else {
			return new ResponseEntity<String>("Contract details of " + contractNumber + " not found", HttpStatus.NOT_FOUND );
		}
	}
	
	@PostMapping("{contractNumber}/{quotation}/{startDate}/{endDate}/{contractStatus}")
	public String addContract(@PathVariable("contractNumber") String contractNumber,@PathVariable("quotation") String quotation,@PathVariable("startDate") LocalDate startDate,
			@PathVariable("endDate") LocalDate endDate,@PathVariable("contractStatus") String contractStatus) {
		Contract c = new Contract();
		c.setContractNumber(contractNumber);
		c.setQuotation(quotation);
		c.setStartDate(startDate);
		c.setEndDate(endDate);
		c.setContractStatus(contractStatus);
		if(contractservice.addContract(c))
			return "Contract added successfully";
		else
			return "Contract data is duplicate";
	}
	
	@GetMapping
	public List<Contract> getAllContract(){
		return contractservice.getAllContracts();
	}
	
	@DeleteMapping("{contractNumber}")
	public String deleteContract(@PathVariable("contractNumber") String contractNumber) {
		if(contractservice.deleteContract(contractNumber)) {
			return "Contract data is successfully deleted";
		}
		else
			return "Contract with " + contractNumber + " contract number is not found" ;
	}
	
	@PutMapping
	public String updateContract(@RequestBody Contract contract) {
		if(contractservice.updateContract(contract)) {
			return "Successfully updated";
		}
		return "Contract to update not found ";
	}
	
	
	
}
